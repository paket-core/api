====== INSTALL ======
How to Get, Run and Test the Code

===== Get the Code =====
`git clone git@34.253.21.197:paket`

You will need to have your public key in `/home/git/.ssh/authorized_keys`.


===== Run the Code =====
1) Copy the code found in `paket/Paket.sol` to Remix.

https://remix.ethereum.org/

2) Compile it in Remix by hitting the compile button (do not use auto compile, fetching the sources from GitHub takes too long). You should receive some warnings from both our code and the open-zeppelin lib. These fall into three categories (usage of `now`, Remix not being able to estimate gas requirement and possibly constant functions) and are safe to ignore.

3) Create the contract by clicking the run tab and then the create button. You may need to raise the gas limit on the creation of the contract to 4,000,000 wei.

===== Test the Code =====
Test the functions. Arguments, when required, are separated by commas and should always quoted in double quotes. Addresses are of the form `"0x1234..."`. Numbers are `"1"`.

After executing a function you can see its status in the console. If there were no errors, you should be able to hit the details button (esp. to examine the decoded output, because Remix doesn't always display it) and the debug button which gives you a fully featured debugger.

Note that "read-only" functions that do not modify the state and have no cost show up as violet buttons while state changing functions show up as red.

Try the following sequence:
  - totalSupply: 1000000000000000000000000
  - symbol: BUL
  - owner: owner's address
  - name: BUL
  - decimals: 18
  - balanceOf(owner's address): 1000000000000000000000000
  - mint(owner's address, 1000)
  - balanceOf(owner's address): 1000000000000000000001000
  - mintingFinished
  - mint(owner's address, 1): should return an error and revert
  - transfer("0x1", "1000")
  - balanceOf(owner's address): 1000000000000000000000000
  - balanceOf("0x1"): 1000
  - create(owner's address, result of date -d '+1 minute' +%s, "50", "500"): examine the transaction details to get the Paket's id.
  - commitPayment(Paket id, "0x1", "50")
  - commitCollateral(Paket id, "0x2", "500")
  - pay(Paket id)
  - balanceOf("0x1"): 1050
  - balanceOf(owner's address): 999999999999999999999950
  - create(owner's address, result of date -d '+1 minute' +%s, "50", "500"): examine the transaction details to get the Paket's id.
  - commitPayment(Paket id, "0x1", "50")
  - commitCollateral(Paket id, "0x2", "500")
  - refund(Paket id) - should fail if a minute did not pass and succeed if it did. Wait till it succeeds.
  - balanceOf("0x2"): 500
  - balanceOf(owner's address): 999999999999999999999450
